name: GraalVM Native Image Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  JAVA_VERSION: '21'
  IMAGE_NAME: 'spring-boot-native'

jobs:
  build-native:
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [amd64, arm64]
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          native-image-musl: 'true'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with Maven
        run: |
          # For ARM64, we need to use Dockerized build
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            docker run --rm \
              -v "$PWD":/project \
              -w /project \
              ghcr.io/graalvm/native-image-community:22.3.2 \
              mvn -Pnative native:compile
          else
            mvn -Pnative native:compile
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: native-image-${{ matrix.arch }}
          path: target/${{ env.IMAGE_NAME }}

      - name: Create multi-arch Docker image
        if: matrix.arch == 'amd64'  # Only run once
        run: |
          # Download both artifacts
          mkdir -p releases
          curl -L -o releases/amd64-image \
            https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/artifacts/amd64-image
          curl -L -o releases/arm64-image \
            https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/artifacts/arm64-image
          
          # Build and push multi-arch image
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ghcr.io/$GITHUB_REPOSITORY/${{ env.IMAGE_NAME }}:latest \
            --push .